{
  "version": 3,
  "sources": ["../src/metro.mjs", "../src/mw/json.mjs", "../src/mw/thrower.mjs", "../src/everything.mjs"],
  "sourcesContent": ["/**\n * base URL used to link to more information about an error message\n */\nconst metroURL = 'https://metro.muze.nl/details/'\n\n/**\n * Symbols:\n * - isProxy: used to test if an object is a metro Proxy to another object\n * - source: used to return the actual source (target) of a metro Proxy\n */\nif (!Symbol.metroProxy) {\n\tSymbol.metroProxy = Symbol('isProxy')\n}\nif (!Symbol.metroSource) {\n\tSymbol.metroSource = Symbol('source')\n}\n\n/**\n * Metro HTTP Client with middleware support\n * @method get\n * @method post\n * @method put\n * @method delete\n * @method patch\n * @method head\n * @method options\n * @method query\n */\nclass Client\n{\n\t#options = {\n\t\turl: typeof window != 'undefined' ? window.location : 'https://localhost'\n\t}\n\t#verbs = ['get','post','put','delete','patch','head','options','query']\n\n\tstatic tracers = {}\n\n\t/**\n\t * @typedef {Object} ClientOptions\n\t * @property {Array} middlewares - list of middleware functions\n\t * @property {string|URL} url - default url of the client\n\t * @property {[string]} verbs - a list of verb methods to expose, e.g. ['get','post']\n\t * \n\t * Constructs a new metro client. Can have any number of params.\n\t * @params {ClientOptions|URL|Function|Client}\n\t * @returns {Client} - A metro client object with given or default verb methods\n\t */\n\tconstructor(...options)\n\t{\n\t\tfor (let option of options) {\n\t\t\tif (typeof option == 'string' || option instanceof String) {\n\t\t\t\tthis.#options.url = ''+option\n\t\t\t} else if (option instanceof Client) {\n\t\t\t\tObject.assign(this.#options, option.#options)\n\t\t\t} else if (option instanceof Function) {\n\t\t\t\tthis.#addMiddlewares([option])\n\t\t\t} else if (option && typeof option == 'object') {\n\t\t\t\tfor (let param in option) {\n\t\t\t\t\tif (param == 'middlewares') {\n\t\t\t\t\t\tthis.#addMiddlewares(option[param])\n\t\t\t\t\t} else if (typeof option[param] == 'function') {\n\t\t\t\t\t\tthis.#options[param] = option[param](this.#options[param], this.#options)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.#options[param] = option[param]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this.#options.verbs) {\n\t\t\tthis.#verbs = this.#options.verbs\n\t\t\tdelete this.#options.verbs\n\t\t}\n\n\t\tfor (const verb of this.#verbs) {\n\t\t\tthis[verb] = async function(...options) {\n\t\t\t\treturn this.fetch(request(\n\t\t\t\t\tthis.#options,\n\t\t\t\t\t...options,\n\t\t\t\t\t{method: verb.toUpperCase()}\n\t\t\t\t))\n\t\t\t}\n\t\t}\n\t\tObject.freeze(this)\n\t}\n\n\t#addMiddlewares(middlewares)\n\t{\n\t\tif (typeof middlewares == 'function') {\n\t\t\tmiddlewares = [ middlewares ]\n\t\t}\n\t\tlet index = middlewares.findIndex(m => typeof m != 'function')\n\t\tif (index>=0) {\n\t\t\tthrow metroError('metro.client: middlewares must be a function or an array of functions '\n\t\t\t\t+metroURL+'client/invalid-middlewares-value/', middlewares[index])\n\t\t}\n\t\tif (!Array.isArray(this.#options.middlewares)) {\n\t\t\tthis.#options.middlewares = []\n\t\t}\n\t\tthis.#options.middlewares = this.#options.middlewares.concat(middlewares)\n\t}\n\n\t/**\n\t * Mimics the standard browser fetch method, but uses any middleware installed through\n\t * the constructor.\n\t * @param {Request|string|Object} - Required. The URL or Request object, accepts all types that are accepted by metro.request\n\t * @param {Object} - Optional. Any object that is accepted by metro.request\n\t * @return {Promise<Response|*>} - The metro.response to this request, or any other result as changed by any included middleware.\n\t */\n\tfetch(req, options)\n\t{\n\t\treq = request(req, options)\n\t\tif (!req.url) {\n\t\t\tthrow metroError('metro.client.'+req.method.toLowerCase()+': Missing url parameter '+metroURL+'client/missing-url-param/', req)\n\t\t}\n\t\tif (!options) {\n\t\t\toptions = {}\n\t\t}\n\t\tif (!(typeof options === 'object') \n\t\t\t|| Array.isArray(options)\n\t\t\t|| options instanceof String) \n\t\t{\n\t\t\tthrow metroError('metro.client.fetch: Options is not an object')\n\t\t}\n\n\t\tconst metrofetch = async function browserFetch(req)\n\t\t{\n\t\t\tif (req[Symbol.metroProxy]) {\n\t\t\t\t// even though a Proxy is supposed to be 'invisible'\n\t\t\t\t// fetch() doesn't work with the proxy (in Firefox), \n\t\t\t\t// you need the actual Request object here\n\t\t\t\t// and the actual body if you use e.g. FormData\n\t\t\t\tif (req.body && req.body[Symbol.metroSource]) {\n\t\t\t\t\tlet body = req.body[Symbol.metroSource]\n\t\t\t\t\treq = new Request(req[Symbol.metroSource], { body })\n\t\t\t\t} else {\n\t\t\t\t\treq = req[Symbol.metroSource]\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst res = await fetch(req)\n\t\t\treturn response(res)\n\t\t}\n\t\t\n\t\tlet middlewares = [metrofetch].concat(this.#options?.middlewares?.slice() || [])\n\t\toptions = Object.assign({}, this.#options, options)\n\t\t//@TODO: do this once in constructor?\n\t\tlet next\n\t\tfor (let middleware of middlewares) {\n\t\t\tnext = (function(next, middleware) {\n\t\t\t\treturn async function(req) {\n\t\t\t\t\tlet res\n\t\t\t\t\tlet tracers = Object.values(Client.tracers)\n\t\t\t\t\tfor(let tracer of tracers) {\n\t\t\t\t\t\tif (tracer.request) {\n\t\t\t\t\t\t\ttracer.request.call(tracer, req, middleware)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tres = await middleware(req, next)\n\t\t\t\t\tfor(let tracer of tracers) {\n\t\t\t\t\t\tif (tracer.response) {\n\t\t\t\t\t\t\ttracer.response.call(tracer, res, middleware)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn res\n\t\t\t\t}\t\t\t\t\t\t\t\t\n\t\t\t})(next, middleware)\n\t\t}\n\t\treturn next(req)\n\t}\n\n\twith(...options) {\n\t\treturn new Client(this, ...options)\n\t}\n}\n\n/**\n * Returns a new metro Client object.\n * @param {...ClientOptions|string|URL}\n * @return Client\n */\nexport function client(...options)\n{\n\treturn new Client(...options)\n}\n\nfunction appendHeaders(r, headers)\n{\n\tif (!Array.isArray(headers)) {\n\t\theaders = [headers]\n\t}\n\theaders.forEach((header) => {\n\t\tif (typeof header == 'function') {\n\t\t\tlet result = header(r.headers, r)\n\t\t\tif (result) {\n\t\t\t\tif (!Array.isArray(result)) {\n\t\t\t\t\tresult = [result]\n\t\t\t\t}\n\t\t\t\theaders = headers.concat(result)\n\t\t\t}\n\t\t}\n\t})\n\theaders.forEach((header) => {\n\t\tObject.entries(header).forEach(([name,value]) => {\t\t\t\n\t\t\tr.headers.append(name, value)\n\t\t})\n\t})\n}\n\nfunction bodyProxy(body, r)\n{\n\tlet source = r.body\n\tif (!source) {\n\t\t//Firefox does not allow access to Request.body (undefined)\n\t\t//Chrome and Nodejs do, so mimic the correct (documented)\n\t\t//result here\n\t\tif (body === null) {\n\t\t\tsource = new ReadableStream()\n\t\t} else if (body instanceof ReadableStream) {\n\t\t\tsource = body\n\t\t} else if (body instanceof Blob) {\n\t\t\tsource = body.stream()\n\t\t} else {\n\t\t\tsource = new ReadableStream({\n\t\t\t\tstart(controller) {\n\t\t\t\t\tlet chunk\n\t\t\t\t\tswitch(typeof body) {\n\t\t\t\t\t\tcase 'object':\n\t\t\t\t\t\t\tif (typeof body.toString == 'function') {\n\t\t\t\t\t\t\t\t// also catches URLSearchParams\n\t\t\t\t\t\t\t\tchunk = body.toString()\n\t\t\t\t\t\t\t} else if (body instanceof FormData) {\n\t\t\t\t\t\t\t\tchunk = new URLSearchParams(body).toString()\n\t\t\t\t\t\t\t} else if (body instanceof ArrayBuffer\n\t\t\t\t\t\t\t\t|| ArrayBuffer.isView(body)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t// catchs TypedArrays - e.g. Uint16Array\n\t\t\t\t\t\t\t\tchunk = body\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow metroError('Cannot convert body to ReadableStream', body)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tcase 'number':\n\t\t\t\t\t\tcase 'boolean':\n\t\t\t\t\t\t\tchunk = body\n\t\t\t\t\t\tbreak\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow metroError('Cannot convert body to ReadableStream', body)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tcontroller.enqueue(chunk)\n\t\t\t\t\tcontroller.close()\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\treturn new Proxy(source, {\n\t\tget(target, prop, receiver) {\n\t\t\tswitch (prop) {\n\t\t\t\tcase Symbol.metroProxy:\n\t\t\t\t\treturn true\n\t\t\t\tbreak\n\t\t\t\tcase Symbol.metroSource:\n\t\t\t\t\treturn body\n\t\t\t\tbreak\n\t\t\t\tcase 'toString':\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\treturn ''+body\n\t\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tif (body && typeof body == 'object') {\n\t\t\t\tif (prop in body) {\n\t\t\t\t\tif (typeof body[prop] == 'function') {\n\t\t\t\t\t\treturn function(...args) {\n\t\t\t\t\t\t\treturn body[prop].apply(body, args)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn body[prop]\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (prop in target && prop != 'toString') {\n\t\t\t\t// skipped toString, since it has no usable output\n\t\t\t\t// and body may have its own toString\n\t\t\t\tif (typeof target[prop] == 'function') {\n\t\t\t\t\treturn function(...args) {\n\t\t\t\t\t\treturn target[prop].apply(target, args)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn target[prop]\n\t\t\t}\n\t\t},\n\t\thas(target, prop) {\n\t\t\tif (body && typeof body == 'object') {\n\t\t\t\treturn prop in body\n\t\t\t} else {\n\t\t\t\treturn prop in target\n\t\t\t}\n\t\t},\n\t\townKeys(target) {\n\t\t\tif (body && typeof body == 'object') {\n\t\t\t\treturn Reflect.ownKeys(body)\n\t\t\t} else {\n\t\t\t\treturn Reflect.ownKeys(target)\n\t\t\t}\n\t\t},\n\t\tgetOwnPropertyDescriptor(target, prop) {\n\t\t\tif (body && typeof body == 'object') {\n\t\t\t\treturn Object.getOwnPropertyDescriptor(body,prop)\n\t\t\t} else {\n\t\t\t\treturn Object.getOwnPropertyDescriptor(target,prop)\n\t\t\t}\n\t\t}\n\t})\n}\n\nfunction getRequestParams(req, current)\n{\n\tlet params = current || {}\n\tif (!params.url && current.url) {\n\t\tparams.url = current.url\n\t}\n\t// function to fetch all relevant properties of a Request\n\tfor(let prop of ['method','headers','body','mode','credentials','cache','redirect',\n\t\t'referrer','referrerPolicy','integrity','keepalive','signal',\n\t\t'priority','url']) {\n\t\tif (typeof req[prop] == 'function') {\n\t\t\treq[prop](params[prop], params)\n\t\t} else if (typeof req[prop] != 'undefined') {\n\t\t\tif (prop == 'url') {\n\t\t\t\tparams.url = url(params.url, req.url)\n\t\t\t} else if (prop == 'headers') {\n\t\t\t\tparams.headers = new Headers(current.headers)\n\t\t\t\tif (!(req.headers instanceof Headers)) {\n\t\t\t\t\treq.headers = new Headers(req.headers)\n\t\t\t\t}\n\t\t\t\tfor (let [key, value] of req.headers.entries()) {\n\t\t\t\t\tparams.headers.set(key, value)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tparams[prop] = req[prop]\n\t\t\t}\n\t\t}\n\t}\n\treturn params\n}\n\n/**\n * @typedef {Request} MetroRequest\n * @property {Symbol(source)} - returns the target Request of this Proxy\n * @property {Symbol(isProxy)} - returns true\n * @method with - returns a new MetroRequest, with the given options added\n * @param {<RequestOptions|Request|string|URL|URLSearchParams|FormData|ReadableStream|\n *   Blob|ArrayBuffer|DataView|TypedArray>} ...options - request options, handled in order\n * \n * Returns a new metro Request object\n * @param {<RequestOptions|Request|string|URL|URLSearchParams|FormData|ReadableStream|\n *   Blob|ArrayBuffer|DataView|TypedArray>} ...options - request options, handled in order\n * @return {MetroRequest} - a new metro Request object\n */\nexport function request(...options)\n{\n\t// the standard Request constructor is a minefield\n\t// so first gather all the options together into a single\n\t// javascript object, then set it in one go\n\tlet requestParams = {\n\t\turl: typeof window != 'undefined' ? window.location : 'https://localhost/',\n\t\tduplex: 'half' // required when setting body to ReadableStream, just set it here by default already\n\t}\n\tfor (let option of options) {\n\t\tif (typeof option == 'string'\n\t\t\t|| option instanceof URL\n\t\t\t|| option instanceof URLSearchParams\n\t\t) {\n\t\t\trequestParams.url = url(requestParams.url, option)\n\t\t} else if (option && (\n\t\t\toption instanceof FormData\n\t\t\t|| option instanceof ReadableStream\n\t\t\t|| option instanceof Blob\n\t\t\t|| option instanceof ArrayBuffer\n\t\t\t|| option instanceof DataView\n\t\t)) {\n\t\t\trequestParams.body = option\n\t\t} else if (option && typeof option == 'object') {\n\t\t\tObject.assign(requestParams, getRequestParams(option, requestParams))\n\t\t}\n\t}\n\tlet body = requestParams.body\n\tif (body) {\n\t\tif (typeof body == 'object'\n\t\t\t&& !(body instanceof String)\n\t\t\t&& !(body instanceof ReadableStream)\n\t\t\t&& !(body instanceof Blob)\n\t\t\t&& !(body instanceof ArrayBuffer)\n\t\t\t&& !(body instanceof DataView)\n\t\t\t&& !(body instanceof FormData)\n\t\t\t&& !(body instanceof URLSearchParams)\n\t\t\t&& (typeof TypedArray=='undefined' || !(body instanceof TypedArray))\n\t\t) {\n\t\t\trequestParams.body = JSON.stringify(body)\n\t\t}\n\t}\n\tlet r = new Request(requestParams.url, requestParams)\n\tObject.freeze(r)\n\treturn new Proxy(r, {\n\t\tget(target, prop, receiver) {\n\t\t\tswitch(prop) {\n\t\t\t\tcase Symbol.metroSource:\n\t\t\t\t\treturn target\n\t\t\t\tbreak\n\t\t\t\tcase Symbol.metroProxy:\n\t\t\t\t\treturn true\n\t\t\t\tbreak\n\t\t\t\tcase 'with':\n\t\t\t\t\treturn function(...options) {\n\t\t\t\t\t\tif (body) { // body is kept in a seperate value, if it set earlier\n\t\t\t\t\t\t\toptions.unshift({ body }) // unshifted so it can be overridden by options\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn request(target, ...options)\n\t\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t\tcase 'body':\n\t\t\t\t\t// Request.body is always a ReadableStream\n\t\t\t\t\t// which is a horrible API, if you want to\n\t\t\t\t\t// allow middleware to alter the body\n\t\t\t\t\t// so we keep the original body, wrap a Proxy\n\t\t\t\t\t// around it to keep the ReadableStream api\n\t\t\t\t\t// accessible, but allow access to the original\n\t\t\t\t\t// body value as well\n\t\t\t\t\tif (!body) {\n\t\t\t\t\t\tbody = target.body\n\t\t\t\t\t}\n\t\t\t\t\tif (body) {\n\t\t\t\t\t\tif (body[Symbol.metroProxy]) {\n\t\t\t\t\t\t\treturn body\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn bodyProxy(body, target)\n\t\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tif (target[prop] instanceof Function) {\n\t\t\t\treturn target[prop].bind(target)\n\t\t\t}\n\t\t\treturn target[prop]\n\t\t}\n\t})\n}\n\nfunction getResponseParams(res, current)\n{\n\t// function to fetch all relevant properties of a Response\n\tlet params = current || {}\n\tif (!params.url && current.url) {\n\t\tparams.url = current.url\n\t}\n\tfor(let prop of ['status','statusText','headers','body','url','type','redirected']) {\n\t\tif (typeof res[prop] == 'function') {\n\t\t\tres[prop](params[prop], params)\n\t\t} else if (typeof res[prop] != 'undefined') {\n\t\t\tif (prop == 'url') {\n\t\t\t\tparams.url = new URL(res.url, params.url || 'https://localhost/')\n\t\t\t} else {\n\t\t\t\tparams[prop] = res[prop]\n\t\t\t}\n\t\t}\n\t}\n\treturn params\n}\n\n/**\n * @typedef {Response} MetroResponse\n * @property {Symbol(source)} - returns the target Response of this Proxy\n * @property {Symbol(isProxy)} - returns true\n * @method with - returns a new MetroResponse, with the given options added\n * @param {<ResponseOptions|Response|string|URLSearchParams|FormData|ReadableStream|\n *   Blob|ArrayBuffer|DataView|TypedArray>} ...options - respomse options, handled in order\n * \n * Returns a new metro Response object\n * @param {<ResponseOptions|Response|string|URLSearchParams|FormData|ReadableStream|\n *   Blob|ArrayBuffer|DataView|TypedArray>} ...options - request options, handled in order\n * @return {MetroResponse} - a new metro Response object\n */\nexport function response(...options)\n{\n\tlet responseParams = {}\n\tfor (let option of options) {\n\t\tif (typeof option == 'string') {\n\t\t\tresponseParams.body = option\n\t\t} else if (option instanceof Response) {\n\t\t\tObject.assign(responseParams, getResponseParams(option, responseParams))\n\t\t} else if (option && typeof option == 'object') {\n\t\t\tif (option instanceof FormData\n\t\t\t\t|| option instanceof Blob\n\t\t\t\t|| option instanceof ArrayBuffer\n\t\t\t\t|| option instanceof DataView\n\t\t\t\t|| option instanceof ReadableStream\n\t\t\t\t|| option instanceof URLSearchParams\n\t\t\t\t|| option instanceof String\n\t\t\t\t|| (typeof TypedArray != 'undefined' && option instanceof TypedArray)\n\t\t\t) {\n\t\t\t\tresponseParams.body = option\n\t\t\t} else {\n\t\t\t\tObject.assign(responseParams, getResponseParams(option, responseParams))\n\t\t\t}\n\t\t}\n\t}\n\tlet r = new Response(responseParams.body, responseParams)\t\n\tObject.freeze(r)\n\treturn new Proxy(r, {\n\t\tget(target, prop, receiver) {\n\t\t\tswitch(prop) {\n\t\t\t\tcase Symbol.metroProxy:\n\t\t\t\t\treturn true\n\t\t\t\tbreak\n\t\t\t\tcase Symbol.metroSource:\n\t\t\t\t\treturn target\n\t\t\t\tbreak\n\t\t\t\tcase 'with':\n\t\t\t\t\treturn function(...options) {\n\t\t\t\t\t\treturn response(target, ...options)\n\t\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t\tcase 'body':\n\t\t\t\t\tif (responseParams.body) {\n\t\t\t\t\t\tif (responseParams.body[Symbol.metroProxy]) {\n\t\t\t\t\t\t\treturn responseParams.body\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn bodyProxy(responseParams.body, target)\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn bodyProxy('',target)\n\t\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t\tcase 'ok':\n\t\t\t\t\treturn (target.status>=200) && (target.status<400)\n\t\t\t\tbreak\n\t\t\t\tcase 'headers':\n\t\t\t\t\treturn target.headers\n\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tif (prop in responseParams && prop != 'toString') {\n\t\t\t\t\t\treturn responseParams[prop]\n\t\t\t\t\t}\n\t\t\t\t\tif (prop in target && prop != 'toString') {\n\t\t\t\t\t\t// skipped toString, since it has no usable output\n\t\t\t\t\t\t// and body may have its own toString\n\t\t\t\t\t\tif (typeof target[prop] == 'function') {\n\t\t\t\t\t\t\treturn function(...args) {\n\t\t\t\t\t\t\t\treturn target[prop].apply(target, args)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn target[prop]\n\t\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\treturn undefined\n\t\t}\n\t})\n}\n\nfunction appendSearchParams(url, params) {\n\tif (typeof params == 'function') {\n\t\t params(url.searchParams, url)\n\t} else {\n\t\tparams = new URLSearchParams(params)\n\t\tparams.forEach((value,key) => {\n\t\t\turl.searchParams.append(key, value)\n\t\t})\n\t}\n}\n\n/**\n * @typedef {URL} MetroURL\n * @property {Symbol(source)} - returns the target Request of this Proxy\n * @property {Symbol(isProxy)} - returns true\n * @method with - returns a new MetroRequest, with the given options added\n * @param {<URL|URLSearchParams|string|Object|Function>} ...options - url options, handled in order\n * \n * Returns a new metro URL object\n * @param {<URL|URLSearchParams|string|Object|Function>} ...options - url options, handled in order\n * @return {MetroURL} - a new metro URL object\n */\nexport function url(...options)\n{\n\tlet validParams = ['hash','host','hostname','href',\n\t\t\t'password','pathname','port','protocol','username','search','searchParams']\n\tlet u = new URL('https://localhost/')\n\tfor (let option of options) {\n\t\tif (typeof option == 'string' || option instanceof String) {\n\t\t\t// option is a relative or absolute url\n\t\t\tu = new URL(option, u)\n\t\t} else if (option instanceof URL \n\t\t\t|| (typeof Location != 'undefined' \n\t\t\t\t&& option instanceof Location)\n\t\t) {\n\t\t\tu = new URL(option)\n\t\t} else if (option instanceof URLSearchParams) {\n\t\t\tappendSearchParams(u, option)\n\t\t} else if (option && typeof option == 'object') {\n\t\t\tfor (let param in option) {\n\t\t\t\tif (param=='search') {\n\t\t\t\t\tif (typeof option.search == 'function') {\n\t\t\t\t\t\toption.search(u.search, u)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tu.search = new URLSearchParams(option.search)\n\t\t\t\t\t}\n\t\t\t\t} else if (param=='searchParams') {\n\t\t\t\t\tappendSearchParams(u, option.searchParams)\n\t\t\t\t} else {\n\t\t\t\t\tif (!validParams.includes(param)) {\n\t\t\t\t\t\tthrow metroError('metro.url: unknown url parameter '+metroURL+'url/unknown-param-name/', param)\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof option[param] == 'function') {\n\t\t\t\t\t\toption[param](u[param], u)\n\t\t\t\t\t} else if (\n\t\t\t\t\t\ttypeof option[param] == 'string' || option[param] instanceof String \n\t\t\t\t\t\t|| typeof option[param] == 'number' || option[param] instanceof Number\n\t\t\t\t\t\t|| typeof option[param] == 'boolean' || option[param] instanceof Boolean\n\t\t\t\t\t) {\n\t\t\t\t\t\tu[param] = ''+option[param]\n\t\t\t\t\t} else if (typeof option[param] == 'object' && option[param].toString) {\n\t\t\t\t\t\tu[param] = option[param].toString()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow metroError('metro.url: unsupported value for '+param+' '+metroURL+'url/unsupported-param-value/', options[param])\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow metroError('metro.url: unsupported option value '+metroURL+'url/unsupported-option-value/', option)\n\t\t}\n\t}\n\tObject.freeze(u)\n\treturn new Proxy(u, {\n\t\tget(target, prop, receiver) {\n\t\t\tswitch(prop) {\n\t\t\t\tcase Symbol.metroProxy:\n\t\t\t\t\treturn true\n\t\t\t\tbreak\n\t\t\t\tcase Symbol.metroSource:\n\t\t\t\t\treturn target\n\t\t\t\tbreak\n\t\t\t\tcase 'with':\n\t\t\t\t\treturn function(...options) {\n\t\t\t\t\t\treturn url(target, ...options)\n\t\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tif (target[prop] instanceof Function) {\n\t\t\t\treturn target[prop].bind(target)\n\t\t\t}\n\t\t\treturn target[prop]\n\t\t}\n\t})\n}\n\n/**\n * @typedef {FormData} MetroFormData\n * @property {Symbol(source)} - returns the target Request of this Proxy\n * @property {Symbol(isProxy)} - returns true\n * @method with - returns a new MetroRequest, with the given options added\n * @param {<FormData|Object>} ...options - url options, handled in order\n * \n * Returns a new metro FormData object\n * @param {<FormData|Object>} ...options - formdata options, handled in order\n * @return {MetroURL} - a new metro FormData object\n */\nexport function formdata(...options)\n{\n\tvar params = new FormData()\n\tfor (let option of options) {\n\t\tif (option instanceof FormData) {\n\t\t\tfor (let entry of option.entries()) {\n\t\t\t\tparams.append(entry[0],entry[1])\n\t\t\t}\n\t\t} else if (option && typeof option == 'object') {\n\t\t\tfor (let entry of Object.entries(option)) {\n\t\t\t\tif (Array.isArray(entry[1])) {\n\t\t\t\t\tfor (let value of entry[1]) {\n\t\t\t\t\t\tparams.append(entry[0], value)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tparams.append(entry[0],entry[1])\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new metroError('metro.formdata: unknown option type, only FormData or Object supported',option)\n\t\t}\n\t}\n\tObject.freeze(params)\n\treturn new Proxy(params, {\n\t\tget: (target,prop,receiver) => {\n\t\t\tswitch(prop) {\n\t\t\t\tcase Symbol.metroProxy:\n\t\t\t\t\treturn true\n\t\t\t\tbreak\n\t\t\t\tcase Symbol.metroSource:\n\t\t\t\t\treturn target\n\t\t\t\tbreak\n\t\t\t\tcase 'with':\n\t\t\t\t\treturn function(...options) {\n\t\t\t\t\t\treturn formdata(target, ...options)\n\t\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tif (target[prop] instanceof Function) {\n\t\t\t\treturn target[prop].bind(target)\n\t\t\t}\n\t\t\treturn target[prop]\n\t\t}\n\t})\n}\n\nconst metroConsole = {\n\terror: (message, ...details) => {\n\t\tconsole.error('\u24C2\uFE0F  ',message, ...details)\n\t},\n\tinfo: (message, ...details) => {\n\t\tconsole.info('\u24C2\uFE0F  ',message, ...details)\n\t},\n\tgroup: (name) => {\n\t\tconsole.group('\u24C2\uFE0F  '+name)\n\t},\n\tgroupEnd: (name) => {\n\t\tconsole.groupEnd('\u24C2\uFE0F  '+name)\n\t}\n}\n\n\n/**\n * Custom Metro Error function that outputs to the console then throws an error\n */\nexport function metroError(message, ...details) {\n\tmetroConsole.error(message, ...details)\n\treturn new Error(message, ...details)\n}\n\n/**\n * Set of debugging tools to trace the request - response flow\n * Tracer are run on all metro fetch calls\n */\nexport const trace = {\n\t/**\n\t * Adds a named tracer function\n\t * @param {string} name - the name of the tracer\n\t * @param {Function} tracer - the tracer function to call\n\t */\n\tadd(name, tracer) {\n\t\tClient.tracers[name] = tracer\n\t},\n\t/**\n\t * Removes a named tracer function\n\t * @param {string} name\n\t */\n\tdelete(name) {\n\t\tdelete Client.tracers[name]\n\t},\n\t/**\n\t * Removes all tracer functions\n\t */\n\tclear() {\n\t\tClient.tracers = {}\n\t},\n\t/**\n\t * Returns a set of request and response tracer functions that use the\n\t * console.group feature to shows nested request/response pairs, with\n\t * most commonly needed information for debugging\n\t */\n\tgroup() {\n\t\tlet group = 0;\n\t\treturn {\n\t\t\trequest: (req, middleware) => {\n\t\t\t\tgroup++\n\t\t\t\tmetroConsole.group(group)\n\t\t\t\tmetroConsole.info(req?.url, req, middleware)\n\t\t\t},\n\t\t\tresponse: (res, middleware) => {\n\t\t\t\tmetroConsole.info(res?.body ? res.body[Symbol.metroSource]: null, res, middleware)\n\t\t\t\tmetroConsole.groupEnd(group)\n\t\t\t\tgroup--\n\t\t\t}\n\t\t}\n\t}\n}\n", "import * as metro from '../metro.mjs'\n\nexport default function jsonmw(options) {\n\toptions = Object.assign({\n\t\treviver: null,\n\t\treplacer: null,\n\t\tspace: ''\n\t}, options)\n\n\treturn async (req, next) => {\n\t\tif (['POST','PUT','PATCH','QUERY'].includes(req.method)) {\n\t\t\treq = req.with({\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type':'application/json',\n\t                'Accept':'application/json'\n\t\t\t\t}\n\t\t\t})\n\t\t\tif (req.body && typeof req.body[Symbol.metroSource] == 'object') {\n\t\t\t\treq = req.with({\n\t\t\t\t\tbody: JSON.stringify(req.body[Symbol.metroSource], options.replacer, options.space)\n\t\t\t\t})\n\t\t\t}\n\t\t} else {\n\t\t\treq = req.with({\n\t\t\t\theaders: {\n\t\t\t        'Accept':'application/json'\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tlet res = await next(req)\n\t\tlet body = await res.text()\n\t\tlet json = JSON.parse(body, options.reviver)\n\t\treturn res.with({\n\t\t\tbody: json\n\t\t})\n\t}\n}", "import * as metro from '../metro.mjs'\n\nexport default function thrower(options) {\n\n\treturn async (req, next) => {\n\t\tlet res = await next(req)\n\t\tif (!res.ok) {\n\t\t\tif (options && typeof options[res.status] == 'function') {\n\t\t\t\tres = options[res.status].apply(res, req)\n\t\t\t} else {\n\t\t\t\tthrow new Error(res.status+': '+res.statusText, {\n\t\t\t\t\tcause: res\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\treturn res\n\t}\n\n}", "import * as m from './metro.mjs'\nimport jsonmw from './mw/json.mjs'\nimport thrower from './mw/thrower.mjs'\n\nconst metro = Object.assign({}, m, {\n\tmw: {\n\t\tjsonmw,\n\t\tthrower\n\t}\n})\n\nglobalThis.metro = metro\n\nexport default metro"],
  "mappings": "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",
  "names": ["metro_exports", "__export", "client", "formdata", "metroError", "request", "response", "trace", "url", "metroURL", "Client", "_Client", "#options", "#verbs", "options", "option", "#addMiddlewares", "param", "verb", "middlewares", "index", "m", "req", "body", "res", "next", "middleware", "tracers", "tracer", "bodyProxy", "body", "r", "source", "controller", "chunk", "metroError", "target", "prop", "receiver", "args", "getRequestParams", "req", "current", "params", "url", "key", "value", "request", "options", "requestParams", "option", "getResponseParams", "res", "response", "responseParams", "appendSearchParams", "validParams", "u", "param", "metroURL", "formdata", "entry", "metroConsole", "message", "details", "name", "trace", "tracer", "Client", "group", "middleware", "jsonmw", "options", "req", "next", "res", "body", "json", "thrower", "options", "req", "next", "res", "metro", "metro_exports", "jsonmw", "thrower", "everything_default"]
}
